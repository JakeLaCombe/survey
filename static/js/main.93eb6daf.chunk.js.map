{"version":3,"sources":["components/Container/index.jsx","components/Layout/index.jsx","components/ProgressBar/index.jsx","components/QuestionNumber/index.jsx","components/SurveyQuestion/index.jsx","components/questions.js","components/Survey/index.jsx","components/Button/index.jsx","components/LandingPage/index.jsx","components/Review/index.jsx","ScoreCalculation.js","components/ContactForm/index.jsx","components/Results/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","Layout","style","padding","backgroundColor","height","ProgressBar","progress","checkpointNumber","calculateProgress","checkpoint","value","max","QuestionNumber","questionNumber","SurveyQuestion","question","onChange","useState","currentValue","setCurrentValue","title","answers","map","answer","index","key","name","type","e","currentTarget","checked","id","Survey","onSurveyFinished","setAnswers","currentQuestion","setCurrentQuestion","showQuestion","setShowQuestion","showActions","setShowActions","showFirstQuestion","useRef","useEffect","current","setTimeout","position","CSSTransition","in","timeout","classNames","onEntered","questions","onClick","tabIndex","length","disabled","undefined","toString","Button","fullWidth","LandingPage","onStart","margin","Review","onConfirm","surveyAnswers","setSurveyAnswers","marginBottom","borderBottom","paddingBottom","SCORING_GUIDE","0","1","2","3","4","5","6","7","8","9","10","ScoreCalculation","scores","score","i","ContactForm","placeholder","Results","ratios","C","S","I","F","G","InvestmentRatios","sendingEmail","setSendingEmail","InvestmentTitle","InvestmentDescription","display","alignItems","width","marginLeft","animate","animationDuration","animationEasing","cx","cy","label","data","dataIndex","percentage","Math","round","labelPosition","labelStyle","fill","fontFamily","fontSize","color","startAngle","lengthAngle","lineWidth","paddingAngle","radius","rounded","viewBoxSize","justifyContent","marginRight","textAlign","States","App","currentPage","setCurrentPage","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93eb6daf.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className=\"Container\">\n            {children}\n        </div>\n    );\n}\n\nexport default Container;","import React from 'react';\nimport Container from '../Container';\n\nconst Layout = () => {\n    return (\n        <>\n            <Container>\n                <div style={{ padding: '1em' }}><span>Logo is Right here</span></div>\n            </Container>\n            <div style={{ backgroundColor: 'rgb(51, 76, 130)', height: \"3em\" }}></div>\n            <div style={{ backgroundColor: 'rgb(210, 76, 88)', height: \"3em\" }}></div>\n            <div></div>\n        </>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport './ProgressBar.css'\n\nconst calculateProgress = (checkpointNumber) => {\n    switch (checkpointNumber) {\n        case 0:\n            return 0;\n        case 1:\n            return 33;\n        case 2:\n            return 67;\n        case 3:\n            return 100;\n        default:\n            return 0;\n    }\n\n}\n\nconst ProgressBar = ({ checkpoint }) => {\n    const progress = calculateProgress(checkpoint);\n\n    return (\n        <div className=\"progress-bar-container\">\n            <progress className=\"Progress\" value={progress} max=\"100\" />\n            <span className={`progress-bar-checkpoint checkpoint-1 active`}></span>\n            <span className={`progress-bar-checkpoint checkpoint-2 ${progress >= 33 ? 'active' : ''}`}></span>\n            <span className={`progress-bar-checkpoint checkpoint-3 ${progress >= 67 ? 'active' : ''}`}></span>\n            <span className={`progress-bar-checkpoint checkpoint-4 ${progress >= 100 ? 'active' : ''}`}></span>\n        </div>\n    );\n}\n\nexport default ProgressBar;","import React from 'react';\nimport './QuestionNumber.css'\n\nconst QuestionNumber = ({ questionNumber }) => {\n    return (\n        <div className=\"question-number-container\">\n            <span className=\"question-number-decoration\"></span>\n            <span className=\"question-number\">{`${questionNumber} of 11`}</span>\n            <span className=\"question-number-decoration\"></span>\n        </div>\n    );\n}\n\nexport default QuestionNumber;","import React, { useState } from 'react';\nimport './SurveyQuestion.css';\n\nconst SurveyQuestion = ({ question, value, onChange = () => { } }) => {\n    const [currentValue, setCurrentValue] = useState(value);\n\n    return (\n        <form className=\"survey-question\">\n            <h1 className=\"survey-question-title\">{question.title}</h1>\n            <div className=\"answers\">\n                {\n                    question.answers.map((answer, index) => (<label key={answer} className=\"radio-container\">{answer}\n                        <input name=\"answer\" type=\"radio\" onChange={(e) => { onChange(e.currentTarget.value); setCurrentValue(e.currentTarget.value) }} checked={currentValue === index} value={index} />\n                        <span className=\"radio-button\" />\n                    </label>))\n                }\n            </div>\n        </form >\n    );\n}\n\nexport default SurveyQuestion;","export default [\n    {\n        id: 0,\n        title: 'What is your current employment status?',\n        answers: [\n            'I am a current full time federal employee',\n            'I am currently on active duty in the military',\n            'I am a part time federal employee or national guard/reserve military member',\n            'I am a retired military or federal employee'\n        ]\n    },\n    {\n        id: 1,\n        title: 'How old are you',\n        answers: [\n            '17-30',\n            '30-45',\n            '45-55',\n            '56+'\n        ]\n    },\n    {\n        id: 2,\n        title: 'How many years until you expect to retire?',\n        answers: [\n            '20 years or more',\n            '10 - 20 years',\n            '5 - 10 years',\n            'Less than 5 years or currently retired'\n        ]\n    },\n    {\n        id: 3,\n        title: 'How much do you currently have in your savings?',\n        answers: [\n            '6 months or more of living expenses',\n            '3-5 months living expenses',\n            '1-2 months living expenses',\n            'Less than one month of living expenses'\n        ]\n    },\n    {\n        id: 4,\n        title: 'If the stock marker lost 40% you would',\n        answers: [\n            'See it as an opportunty and invest more if you had the cash available',\n            'Continue with my currenty strategy, but not invest any more even if I had cash available',\n            'Change my strategy and reduce my exposure to risk',\n            'Pull my money out of the stock market',\n        ]\n    },\n    {\n        id: 5,\n        title: 'In the next few years you expect your income to',\n        answers: [\n            'Increase',\n            'Stay the same',\n            'Decrease',\n            'Decrease drastically'\n        ]\n    },\n    {\n        id: 6,\n        title: 'What do you expect out of your TSP?',\n        answers: [\n            'I expect my portfolio to significantly exceed inflation, even if this means higher levels of Volatility',\n            'I expect my portfolio to exceed inflation, with reasonable levels of volatility',\n            'I exepct my portfolio to keep pace with inflation, with lover levels of volatility',\n            'I am more concerned with having as little volatility as possible more than keeping pace with inflation'\n        ]\n    },\n    {\n        id: 7,\n        title: \"I'm most comfortable with a portfolio that\",\n        answers: [\n            'May fluctuate by 20% up or down but averages 10% over the life of the investment',\n            'May fluctuate by 15% up or down but averages 8% over the life of the investment',\n            'May fluctuate by 10% up or down but averages 4-6% over the life of the investment',\n            'I would take less than 2% in exchange for my portfolio fluctuation a minimal amount',\n        ]\n    },\n    {\n        id: 8,\n        title: 'How would you describe yourself?',\n        answers: [\n            'I am an optimist. I am confident that things will always work out.',\n            \"I am objective. Show me the benefits and the drawbacks. I'll make a decision and live with it\",\n            'I am an anxious person. I usually worry about most things',\n            'I am a pessimist. If something can go wrong, it will go wrong.'\n        ]\n    },\n    {\n        id: 9,\n        title: 'When you are reviewing your TSP to what do you think will focus your attention?',\n        answers: [\n            'The overall longterm performance of the entire portfolio',\n            'The most recent results of the entire portfolio',\n            'The individual fund that is doing the best',\n            'The individual fund that is doing the worst',\n        ]\n    },\n    {\n        id: 10,\n        title: 'If I was given $10,000 in an inheritance I would',\n        answers: [\n            'Wait for a drop in the market and invest the money according to my current investment strategy',\n            'Invest the money immediately in accordance with my current investment strategy',\n            'Invest the money in Low Risk Bonds or Certificates of Deposit',\n            'Save the money and not invest any of it.'\n        ]\n    },\n]","import React, { useState, useEffect, useRef } from 'react';\nimport './Survey.css';\nimport QuestionNumber from '../QuestionNumber';\nimport SurveyQuestion from '../SurveyQuestion';\nimport { CSSTransition } from 'react-transition-group';\nimport questions from '../questions'\n\nfunction Survey({ onSurveyFinished }) {\n    let [answers, setAnswers] = useState({});\n    let [currentQuestion, setCurrentQuestion] = useState(0)\n    let [showQuestion, setShowQuestion] = useState(false)\n    let [showActions, setShowActions] = useState(true)\n    let showFirstQuestion = useRef(true);\n\n    useEffect(() => {\n        if (showFirstQuestion.current) {\n            setTimeout(setShowQuestion(true), 0);\n            showFirstQuestion.current = false;\n        }\n    }, [showFirstQuestion])\n\n    return (\n        <>\n            <QuestionNumber questionNumber={currentQuestion + 1} />\n            <div style={{ position: 'relative' }}>\n                <CSSTransition\n                    in={showQuestion}\n                    timeout={300}\n                    classNames=\"alert\"\n                    onEntered={() => { setShowActions(true) }}\n                >\n                    {showQuestion ? (<SurveyQuestion\n                        key={questions[currentQuestion].id}\n                        value={answers[currentQuestion]}\n                        question={questions[currentQuestion]} onChange={(value) => {\n                            setAnswers({ ...answers, [currentQuestion]: value })\n                        }} />) : (<div></div>)}\n                </CSSTransition>\n            </div>\n            {showActions &&\n                <div className=\"question-actions\">\n                    {currentQuestion !== 0 && <button className=\"prev-button\" key=\"prev\" onClick={() => {\n                        setCurrentQuestion(currentQuestion -= 1)\n                        setShowActions(false)\n                        setShowQuestion(false)\n                        setTimeout(() => { setShowQuestion(true) }, 100)\n                    }}> <span className=\"btn__content\" tabIndex=\"-1\">{'<<<'}&nbsp;&nbsp;&nbsp;&nbsp;Previous</span></button>}\n                    {currentQuestion !== questions.length - 1 && <button className=\"next-button\" key=\"next\" disabled={answers[currentQuestion.toString()] === undefined} onClick={() => {\n                        setCurrentQuestion(currentQuestion += 1)\n                        setShowActions(false)\n                        setShowQuestion(false)\n                        setTimeout(() => { setShowQuestion(true) }, 100)\n                    }}><span className=\"btn__content\" tabIndex=\"-1\">Next&nbsp;&nbsp;&nbsp;&nbsp;{'>>>'}</span></button>}\n                    {currentQuestion === questions.length - 1 && <button className=\"next-button\" key=\"next\" disabled={answers[currentQuestion.toString()] === undefined} onClick={() => {\n                        onSurveyFinished(answers);\n                    }}><span className=\"btn__content\" tabIndex=\"-1\">Finish</span></button>}\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Survey;\n","import React from 'react';\nimport './Button.css';\n\nconst Button = ({ onClick = () => { }, children, fullWidth = false }) => {\n    return (\n        <button onClick={onClick} className={`primary-button ${fullWidth && 'full-width'}`}><span className=\"primary-button-btn__content\">{children}</span></button>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport './LandingPage.css';\nimport Button from '../Button';\n\nconst LandingPage = ({ onStart }) => {\n    return (\n        <div className=\"landing-page\">\n            <div style={{ margin: '4rem' }}></div>\n            <h1 className=\"landing-page-title\">Welcome!</h1>\n            <div style={{ margin: '4rem' }}></div>\n            <Button onClick={onStart}>Click here to get started!</Button>\n        </div>\n    );\n}\n\nexport default LandingPage;","import React, { useState } from 'react';\nimport questions from '../questions';\nimport SurveyQuestion from '../SurveyQuestion';\nimport Button from '../Button';\nimport './Review.css';\n\nconst Review = ({ answers, onConfirm = () => { } }) => {\n    const [surveyAnswers, setSurveyAnswers] = useState(answers);\n\n    return (\n        <>\n            <div style={{ marginBottom: '3em' }}></div>\n            {questions.map((question) => (\n                <div style={{ borderBottom: '#ddd solid 1px', marginBottom: '1em', paddingBottom: '1em' }}>\n                    <SurveyQuestion\n                        question={question}\n                        value={surveyAnswers[question.id]}\n                        onChange={(value) => {\n                            setSurveyAnswers({ ...surveyAnswers, [question.id]: value })\n                        }}\n                    />\n                </div>\n\n            ))}\n            <div style={{ padding: '1rem 2rem 3rem' }}>\n                <Button fullWidth onClick={onConfirm} >Submit</Button>\n            </div>\n        </>\n    );\n}\n\nexport default Review;","\nconst SCORING_GUIDE = {\n    0: {\n        0: 0,\n        1: 0,\n        2: 0,\n        3: 0,\n    },\n    1: {\n        0: 10,\n        1: 7,\n        2: 5,\n        3: 1,\n    },\n    2: {\n        0: 10,\n        1: 5,\n        2: 3,\n        3: 1,\n    },\n    3: {\n        0: 10,\n        1: 7,\n        2: 3,\n        3: 0,\n    },\n    4: {\n        0: 10,\n        1: 5,\n        2: 3,\n        3: 0,\n    },\n    5: {\n        0: 10,\n        1: 7,\n        2: 3,\n        3: 1,\n    },\n    6: {\n        0: 10,\n        1: 7,\n        2: 5,\n        3: 1,\n    },\n    7: {\n        0: 10,\n        1: 7,\n        2: 3,\n        3: 0,\n    },\n    8: {\n        0: 10,\n        1: 7,\n        2: 3,\n        3: 1,\n    },\n    9: {\n        0: 10,\n        1: 5,\n        2: 5,\n        3: 1,\n    },\n    10: {\n        0: 10,\n        1: 10,\n        2: 5,\n        3: 1,\n    },\n}\n\nconst ScoreCalculation = (scores) => {\n    let score = 0;\n\n    for (var i in scores) {\n        score += SCORING_GUIDE[i][scores[i]];\n    }\n\n    return score;\n}\n\nexport default ScoreCalculation;","import React from 'react';\nimport './ContactForm.css';\nimport Button from '../Button';\n\nconst ContactForm = ({ onStart }) => {\n    return (\n        <>\n            <h1 className=\"contact-form-title\">Contact an Advisor</h1>\n            <p className=\"contact-form-description\">Thank you for your interest in us! Please fill out The form below, and advise will be with you as soon as possible!</p>\n            <form className=\"contact-form\">\n                <input className=\"input\" name=\"first\" type=\"text\" placeholder=\"First\" />\n                <input className=\"input\" name=\"last\" type=\"text\" placeholder=\"Last\" />\n                <input className=\"input\" name=\"age\" type=\"number\" placeholder=\"Age\" />\n                <input className=\"input\" name=\"email\" type=\"email\" placeholder=\"Email\" />\n                <input className=\"input\" name=\"number\" type=\"tel\" placeholder=\"Phone Number\" />\n                <Button fullWidth>Submit</Button>\n            </form>\n        </>\n    );\n}\n\nexport default ContactForm;","import React, { useState } from 'react';\nimport PieChart from 'react-minimal-pie-chart';\nimport ScoreCalculation from '../../ScoreCalculation';\nimport Button from '../Button';\nimport './Results.css';\nimport ContactForm from '../ContactForm';\n\nconst InvestmentTitle = (score) => {\n    if (score < 25) {\n        return 'PRESERVATION OF CAPITAL';\n    } else if (score < 50) {\n        return 'BALANCED';\n    } else if (score < 75) {\n        return 'GROWTH AND INCOME';\n    } else {\n        return 'GROWTH FOCUSED';\n    }\n}\n\nconst InvestmentDescription = (score) => {\n    if (score < 25) {\n        return `YOU ARE GROWTH FOCUSED. YOUR PORTFOLIO VALUE MAY EXPERIENCE LARGE SWINGS UP OR DOWN.\n        WE RECOMMEND THAT YOU ALLOCATE YOUR FUNDS INSIDE YOUR TSP AS FOLLOWS:`;\n    } else if (score < 50) {\n        return `YOU ARE GROWTH AND INCOME FOCUSED. YOUR PORTFOLIO VALUE MAY EXPERIENCE MODERATE\n        SWINGS UP OR DOWN. WE RECOMMEND THAT YOU ALLOCATE THE FUNDS INSIDE YOUR TSP AS\n        FOLLOWS:`;\n    } else if (score < 75) {\n        return `YOU ARE BALANCED FOCUSED. BOTH GROWTH AND INCOME ARE EQUALLY IMPORTANT IN YOUR\n        PORTFOLIO. YOU CAN EXPECT MODERATE TO LESS THAN MODERATE SWINGS UP OR DOWN IN THE\n        VALUE OF YOUR TSP ACCOUNT. WE RECOMMEND THAT YOU ALLOCATE YOUR FUNDS INSIDE YOUR TSP\n        AS FOLLOWS:`;\n    } else {\n        return `YOU ARE FOCUSED ON PRESERVING WHAT YOU HAVE SAVED. YOUR PORTFOLIO VALUE MAY STILL\n        EXPERIENCE VOLITILITY BUT IS EXPECTED TO BE MUCH LESS THAN MARKET AVERAGE. WE\n        RECOMMEND THAT YOU ALLOCATE YOUR FUNDS INSIDE YOUR TSP AS FOLLOWS:`;\n    }\n}\n\nconst InvestmentRatios = (score) => {\n    if (score < 25) {\n        return {\n            C: 50,\n            S: 25,\n            I: 25,\n            F: 0,\n            G: 0,\n        }\n    } else if (score < 50) {\n        return {\n            C: 50,\n            S: 10,\n            I: 15,\n            F: 25,\n            G: 0,\n        }\n    } else if (score < 75) {\n        return {\n            C: 45,\n            S: 0,\n            I: 10,\n            F: 45,\n            G: 0,\n        }\n    } else {\n        return {\n            C: 10,\n            S: 0,\n            I: 10,\n            F: 10,\n            G: 70,\n        }\n    }\n}\n\nconst Results = ({ answers }) => {\n    const score = ScoreCalculation(answers);\n    const ratios = InvestmentRatios(100);\n    const [sendingEmail, setSendingEmail] = useState(false);\n\n    return (\n        <>\n            {sendingEmail && <ContactForm />}\n            {!sendingEmail && (\n                <>\n                    <h1 className=\"results-title\">{InvestmentTitle(score)}</h1>\n                    <p className=\"results-description\">{InvestmentDescription(score)}</p>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ width: '60%', marginLeft: '1em' }}>\n                            <PieChart\n                                animate\n                                animationDuration={500}\n                                animationEasing=\"ease-out\"\n                                cx={50}\n                                cy={50}\n                                label={({ data, dataIndex }) =>\n                                    data[dataIndex].percentage > 0 ? Math.round(data[dataIndex].percentage) + '%' : null\n                                }\n                                labelPosition={110}\n                                labelStyle={{\n                                    fill: '#000000',\n                                    fontFamily: 'sans-serif',\n                                    fontSize: '1em'\n                                }}\n                                data={[\n                                    { title: 'C', value: ratios.C, color: 'rgb(210, 76, 88)' },\n                                    { title: 'S', value: ratios.S, color: 'rgb(51, 76, 130)' },\n                                    { title: 'I', value: ratios.I, color: '#AA82B9' },\n                                    { title: 'F', value: ratios.F, color: '#599675' },\n                                    { title: 'G', value: ratios.G, color: '#E3D170' }\n                                ]}\n                                startAngle={0}\n                                lengthAngle={360}\n                                lineWidth={100}\n                                paddingAngle={0}\n                                radius={40}\n                                rounded={false}\n                                viewBoxSize={[\n                                    400,\n                                    400\n                                ]}\n                            />\n                        </div>\n                        <div style={{ display: 'flex', width: '33%', justifyContent: 'center', marginLeft: 'auto', marginRight: '1em' }}>\n                            <div display=\"table\">\n                                {ratios.C > 0 && <div className=\"legend\"><span className=\"legend-color legend-color-c\" />C Plan</div>}\n                                {ratios.S > 0 && <div className=\"legend\"><span className=\"legend-color legend-color-s\" />S Plan</div>}\n                                {ratios.I > 0 && <div className=\"legend\"><span className=\"legend-color legend-color-i\" />I Plan</div>}\n                                {ratios.F > 0 && <div className=\"legend\"><span className=\"legend-color legend-color-f\" />F Plan</div>}\n                                {ratios.G > 0 && <div className=\"legend\"><span className=\"legend-color legend-color-g\" />G Plan</div>}\n                            </div>\n                        </div>\n\n                    </div>\n                    <div style={{ textAlign: 'center', marginBottom: '3em' }}>\n                        <Button onClick={() => { setSendingEmail(true) }}>Contact an Advisor</Button>\n                    </div>\n                </>)}\n        </>\n    );\n}\n\nexport default Results","import React, { useState } from 'react';\nimport './App.css';\nimport Layout from './components/Layout/';\nimport ProgressBar from './components/ProgressBar';\nimport Container from './components/Container';\nimport Survey from './components/Survey';\nimport LandingPage from './components/LandingPage';\nimport Review from './components/Review';\nimport Results from './components/Results';\n\nconst States = {\n  LANDING_PAGE: 0,\n  SURVEY: 1,\n  REVIEW: 2,\n  RESULTS: 3,\n}\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(States.LANDING_PAGE)\n  const [answers, setAnswers] = useState({})\n\n  return (\n    <div className=\"App\">\n      <Layout />\n      <div style={{ marginTop: '3em' }}>\n        <Container>\n          <ProgressBar checkpoint={currentPage} />\n          <div style={{ marginTop: '2em' }} />\n          {currentPage === States.LANDING_PAGE && <LandingPage onStart={() => { setCurrentPage(States.SURVEY); }} />}\n          {currentPage === States.SURVEY && <Survey onSurveyFinished={(surveyAnswers) => { setAnswers(surveyAnswers); setCurrentPage(States.REVIEW) }} />}\n          {currentPage === States.REVIEW && <Review answers={answers} onConfirm={() => setCurrentPage(States.RESULTS)} />}\n          {currentPage === States.RESULTS && <Results answers={answers} />}\n        </Container>\n      </div >\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}